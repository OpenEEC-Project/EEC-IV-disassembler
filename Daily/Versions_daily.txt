


4.0.7.1  (22 June 2020)

Complete rework of internal bank structure layout.

1. Fixed display of RAM addresses in multibanks to correctly show bank.
2. Fixed bank location error with 'short bank' file layouts (e.g. RZAS range)
3. Improved bank location to handle more .bin file layout problems automatically.
3. Added support for later "StepD" 8065 with extra address mode.
4. Widened allowed address range in each bank to support specialist chips.
4. Reworked pseudo code for contional jumps for Carry (JC/JNC),  Overflow (JV/JNV)
  
NB. overflow (JV/JNV) is still probably wrong pseudeo code for some cases - awaiting more feedback.

4.0.6 released as stable (was 4.0.6P)


4.0.7.2 (11 August 2020)

1.  Fixed incorrect processing of bin file with 2 x bank 8.  (I think this is a special homemade 'stock' vs 'tuned' single bank)
2.  Fixed rbase showing bank 8 in some multibank cases (should be bank 1)
3.  Automatically set later 8065 type upon detection, as well as the setting in setopts

4.  Fix regressions after address changes in 4.0.7.1 
4a.  R100, R200, R300 are all zero registers as well as R0.
4b.  Multibank inconsistent address print. Anything < 0x400 has no bank (It's a CPU register), everything else has a bank no.
4c.  Rambank not always setting the following registers correctly.
4d.  Subroutine argument sizes lost (but still doesn't work for all cases, as before)
4e.  For an rbase op e.g. 'ad2w  R1e,Rf2' where rf2 is a register base show as immediate in pseudocode 'R1e = R1e + 8e5a'
4f.  Vector list display not displaying data words correctly. (Yes, some bins DO have data in the call list)

5.  Convert indexed references to a register to show as direct register (eg. R46 = [R0+345]; becomes  R46 = R345;) 
6.  Fix display problem with subroutine arguments in compact print mode not showing argument data.
7.  Fix problem with setopts not applying some options correctly. 
8.  New rules for bit flag names makes for better print result.
9.  Add setopts options for - "cptargs" = set default to compact subroutine argument print , "dataxtnd" = set default to extended data structure print
10. Fix problem with comments not always appearing correctly in extended data print
11. Change option 'X' (flip between hex and decimal) to more consistent  "print radiX"  as 'X n' where n is 2, 10 or 16 (binary, decimal, hex) 
12. Fix problem when subroutine declared by user and arguments then not calculated correctly. 


4.0.7.3 (18 Aug 2020)

1. Fixed  Incorrect print of Signed byte in HEX or BIN modes in struct printouts.
2. Fixed  Fail to pick up sym name in some indirect ops 
3. Fixed  Fails to identify some accessed data in listing. (did show as default = '??')
4. Fixed  Defining a subroutine (i.e. SUB xxxx in DIR file) can stop some code being correctly identified.
5. Fixed  SAD does not correctly check data overlap with args command - can lead to incorrect args printout.
6. Revert some 'auto-bits' rules for some bitwise operands - was too wide. User options 'F' and 'N' with SYM commands covers these. 
7. Revert to 'short form' operands as in "A += B" style. Did cause problem in 'if ( )' prints

